name: forth-action file

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]

jobs:
  build-on-ubuntu:
    runs-on: ubuntu-latest

    steps:
      # Step 1 - Log the pre-build disk space
      - name: Step 1 - Log the pre-build disk space
        run: df -h

      # Step 2 - Checkout the main GitHub branch
      - name: Step 2 - Checkout the main GitHub branch
        uses: actions/checkout@v4

      # Step 3 - Set up the JDK for the build
      - name: Step 3 - Set up the JDK
        uses: actions/setup-java@v4
        with:
          java-version: '23.0.1+11'
          distribution: 'temurin'
          server-id: github
          server-username: GITHUB_ACTOR
          server-password: HUB_TOKEN
          overwrite-settings: true
          job-status: success
          token: ${{ secrets.HUB_TOKEN }}

      # Step 4 - Build the application with Maven
      - name: Step 4 - Building our web application with Maven
        run: mvn -B package --file pom.xml

      # Step 5 - List the Ubuntu environment variables
      - name: Step 5 - List the Ubuntu environment variables
        run: env

  build-on-windows:
    runs-on: windows-latest

    steps:
      # Step 1 - Log the pre-build disk space
      - name: Step 1 - Log the pre-build disk space
        run: df -h

      # Step 2 - Checkout the main GitHub branch
      - name: Step 2 - Checkout the main GitHub branch
        uses: actions/checkout@v4

      # Step 3 - Set up the JDK for the build
      - name: Step 3 - Set up the JDK
        uses: actions/setup-java@v4
        with:
          java-version: '23.0.1+11'
          distribution: 'temurin'
          server-id: github
          server-username: GITHUB_ACTOR
          server-password: HUB_TOKEN
          overwrite-settings: true
          job-status: success
          token: ${{ secrets.HUB_TOKEN }}

      # Step 4 - Build the application with Maven
      - name: Step 4 - Building our web application with Maven
        run: mvn -B package --file pom.xml

      # Step 5 - Get the Windows execution policy
      - name: Step 5 - Windows execution policy
        run: |
          echo "Get the Windows execution policy."
          Get-ExecutionPolicy

      # Step 6 - Get the environment variables for Windows
      - name: Step 6 - Get the environment variables for Windows
        run: |
          $env:PATH
